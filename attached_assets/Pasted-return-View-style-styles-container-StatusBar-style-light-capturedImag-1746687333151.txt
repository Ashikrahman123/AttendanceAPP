return (
    <View style={styles.container}>
      <StatusBar style="light" />

      {!capturedImage ? (
        <>
          <CameraView
            style={styles.camera}
            facing={facing}
            ref={cameraRef}
            onCameraReady={() => setCameraReady(true)}
          >
            <FaceDetectionOverlay isDetecting={isCapturing} />

            <SafeAreaView style={styles.overlay}>
              <Animated.View
                style={[
                  styles.header,
                  {
                    opacity: fadeAnim,
                    transform: [{ translateY: slideAnim }],
                  },
                ]}
              >
                <TouchableOpacity
                  style={styles.closeButton}
                  onPress={handleCancel}
                >
                  <X size={24} color="#FFFFFF" />
                </TouchableOpacity>

                <View style={styles.headerContent}>
                  <Text style={styles.title}>Register Face ID</Text>
                  <Text style={styles.subtitle}>
                    Position your face in the frame
                  </Text>
                </View>

                <TouchableOpacity
                  style={styles.flipButton}
                  onPress={toggleCameraFacing}
                >
                  <RefreshCw size={24} color="#FFFFFF" />
                </TouchableOpacity>
              </Animated.View>

              <Animated.View
                style={[
                  styles.footer,
                  {
                    opacity: fadeAnim,
                    transform: [{ translateY: -slideAnim }],
                  },
                ]}
              >
                <LinearGradient
                  colors={[
                    colors.primaryGradientStart,
                    colors.primaryGradientEnd,
                  ]}
                  style={styles.captureButtonContainer}
                  start={{ x: 0, y: 0 }}
                  end={{ x: 1, y: 1 }}
                >
                  <TouchableOpacity
                    style={styles.captureButton}
                    onPress={handleCapture}
                    disabled={isCapturing || !cameraReady}
                  >
                    {isCapturing ? (
                      <ActivityIndicator color="#FFFFFF" size="large" />
                    ) : (
                      <Camera size={24} color="#FFFFFF" />
                    )}
                  </TouchableOpacity>
                </LinearGradient>

                <Text style={styles.captureText}>
                  {isCapturing
                    ? "Capturing..."
                    : cameraReady
                      ? "Tap to capture"
                      : "Preparing camera..."}
                </Text>
              </Animated.View>
            </SafeAreaView>
          </CameraView>
        </>
      ) : (
        <View style={styles.resultContainer}>
          <Image
            source={{ uri: capturedImage }}
            style={styles.capturedImage}
            resizeMode="cover"
          />

          <View style={styles.resultOverlay}>
            <SafeAreaView style={styles.resultContent}>
              <Animated.View
                style={[
                  styles.resultHeader,
                  {
                    opacity: fadeAnim,
                    transform: [{ translateY: slideAnim }],
                  },
                ]}
              >
                <Text style={styles.resultTitle}>
                  {isProcessing
                    ? "Registering Face..."
                    : isRegistered
                      ? "Registration Successful!"
                      : "Registration Failed"}
                </Text>
              </Animated.View>

              {isProcessing ? (
                <View style={styles.processingContainer}>
                  <ActivityIndicator size="large" color="#FFFFFF" />
                  <Text style={styles.processingText}>
                    Processing your image...
                  </Text>
                </View>
              ) : isRegistered ? (
                <Animated.View
                  style={[
                    styles.successContainer,
                    {
                      opacity: successAnim,
                      transform: [
                        {
                          scale: successAnim.interpolate({
                            inputRange: [0, 0.5, 1],
                            outputRange: [0.8, 1.2, 1],
                          }),
                        },
                      ],
                    },
                  ]}
                >
                  <LinearGradient
                    colors={[colors.success, colors.success]}
                    style={styles.successIconContainer}
                    start={{ x: 0, y: 0 }}
                    end={{ x: 1, y: 1 }}
                  >
                    <CheckCircle size={64} color="#FFFFFF" />
                  </LinearGradient>
                  <Text style={styles.successText}>
                    Face ID Registered Successfully!
                  </Text>
                  <Text style={styles.redirectText}>
                    Redirecting to profile...
                  </Text>
                </Animated.View>
              ) : (
                <View style={styles.failureContainer}>
                  <View style={styles.failureIconContainer}>
                    <X size={64} color={colors.error} />
                  </View>
                  <Text style={styles.failureText}>
                    Unable to register your face
                  </Text>
                  <View style={styles.failureButtons}>
                    <Button
                      title="Try Again"
                      onPress={() => {
                        setCapturedImage(null);
                        setIsProcessing(false);
                      }}
                      style={styles.tryAgainButton}
                    />
                    <Button
                      title="Cancel"
                      variant="outline"
                      onPress={handleCancel}
                      style={styles.cancelRegisterButton}
                    />
                  </View>
                </View>
              )}
            </SafeAreaView>
          </View>
        </View>
      )}

      <LoadingOverlay
        visible={isProcessing && !capturedImage}
        message="Processing..."
        transparent={true}
      />
    </View>
  );
}