import FontAwesome from "@expo/vector-icons/FontAwesome";
import { useFonts } from "expo-font";
import { Stack } from "expo-router";
import * as SplashScreen from "expo-splash-screen";
import { useEffect, useState } from "react";
import { View } from "react-native";
import { useBaseUrl } from "@/context/BaseUrlContext";
import { BaseUrlProvider } from "@/context/BaseUrlContext";
import ThemeProvider from "@/components/ThemeProvider";
import { useAuthStore } from "@/store/auth-store";
import CustomSplashScreen from "@/components/SplashScreen";
import { useThemeStore } from "@/store/theme-store";
import { router } from "expo-router";

function RootLayoutNav() {
  const { baseUrl, isLoading } = useBaseUrl();
  const isDarkMode = useThemeStore((state) => state.isDarkMode);
  const [showSplash, setShowSplash] = useState(true);
  const [isMounted, setIsMounted] = useState(false); // New state to track mounting

  console.log("Navigation state:", { baseUrl, isLoading, showSplash });

  const isAuthenticated = useAuthStore((state) => state.isAuthenticated);

  useEffect(() => {
    // Mark component as mounted
    setIsMounted(true);

    // Ensure splash screen shows for at least 2 seconds
    if (!showSplash) return;

    const timer = setTimeout(() => {
      setShowSplash(false);
      // Navigate based on authentication state after splash screen
      if (isMounted) {
        // Check if mounted before navigating
        if (!isAuthenticated && baseUrl) {
          router.replace("/(auth)/login");
        }
      }
    }, 2000);

    return () => {
      clearTimeout(timer);
      setIsMounted(false); // Clean up on unmount
    };
  }, [showSplash, isAuthenticated, baseUrl, isMounted]);

  if (showSplash || isLoading) {
    return <CustomSplashScreen onFinish={() => {}} />;
  }

  return (
    <Stack
      screenOptions={{
        headerShown: false,
        contentStyle: {
          backgroundColor: isDarkMode ? "#111827" : "#F9FAFB",
        },
      }}
    >
      {!baseUrl ? (
        <Stack.Screen name="baseurl" />
      ) : (
        <>
          <Stack.Screen name="(auth)" />
          <Stack.Screen name="(tabs)" />

          <Stack.Screen
            name="face-verification"
            options={{ presentation: "fullScreenModal" }}
          />
          <Stack.Screen
            name="attendance-details"
            options={{ presentation: "modal" }}
          />
        </>
      )}
    </Stack>
  );
}

export default function RootLayout() {
  const [loaded, error] = useFonts({
    ...FontAwesome.font,
  });

  useEffect(() => {
    if (error) throw error;
  }, [error]);

  if (!loaded) {
    return null;
  }

  return (
    <BaseUrlProvider>
      <ThemeProvider>
        <RootLayoutNav />
      </ThemeProvider>
    </BaseUrlProvider>
  );
}
